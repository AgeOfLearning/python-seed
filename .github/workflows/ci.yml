name: CI

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: [3.6, 3.7, 3.8]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install tox codecov pre-commit
      
      - name: Run Tox
        # Run tox using the version of Python in `PATH`
        run: tox -e py

      # Run pre-commit (only for python-3.7)
      - name: run pre-commit
        if: ${{ matrix.python-version }} == 3.7
        run: pre-commit run --all-files

      - name: Upload Results
        if: success()
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.xml
          flags: unittests
          name: ${{ matrix.platform }}-${{ matrix.tox-env }}
          fail_ci_if_error: false

  publish:
    needs: [tests]
    runs-on: ubuntu-latest
    if: contains(github.ref, 'tags')
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: "3.x"
        env:
          TOXENV=release
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install tox
      
      - name: Set env
        # https://stackoverflow.com/questions/58177786/get-the-current-pushed-tag-in-github-actions
        run: echo ::set-env name=RELEASE_VERSION::${GITHUB_REF#refs/*/}
      
      - name: Check Version
        # We Only deploy to PyPi if github tag match the python version
        run:
          name: verify git tag vs. version
          command: |
            VERSION=$(python setup.py --version)
            if [ "$VERSION" = "$RELEASE_VERSION" ]; then exit 0; else exit 3; fi

      - run:
          name: init .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = $PYPI_USER" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc

      - run:
          name: run tox
          command: ~/.local/bin/tox